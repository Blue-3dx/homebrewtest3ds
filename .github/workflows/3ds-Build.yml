name: Build GDWave / ClassiCube (3DS .3dsx only)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-3DS:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container:
      image: devkitpro/devkitarm:latest

    env:
      DEVKITPRO: /opt/devkitpro
      DEVKITARM: /opt/devkitpro/devkitARM

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install devkitPro packages (dkp-pacman)
        run: |
          set -e
          # update package database & install libs needed to build citro2d apps
          dkp-pacman -Syu --noconfirm
          dkp-pacman -S --noconfirm libctru citro2d citro3d tex3ds

      - name: Prepare icon if missing (use assets/wave.png)
        run: |
          set -e
          mkdir -p misc/3ds
          if [ ! -f misc/3ds/icon.png ] && [ -f assets/wave.png ]; then
            cp assets/wave.png misc/3ds/icon.png
            echo "Copied assets/wave.png -> misc/3ds/icon.png (used as app icon)"
          else
            echo "Icon present or assets/wave.png missing; skipping copy"
          fi

      - name: Show env & devkit files (debug)
        run: |
          echo "DEVKITPRO=$DEVKITPRO"
          echo "DEVKITARM=$DEVKITARM"
          ls -la $DEVKITPRO || true
          ls -la $DEVKITPRO/libctru || true
          ls -la $DEVKITPRO/citro2d || true

      - name: Build .3dsx (top-level make)
        run: |
          set -e
          # Top-level Makefile will include $(DEVKITPRO)/3ds_rules and build, embedding romfs
          make clean || true
          make

      - name: Find produced .3dsx (debug)
        run: |
          echo "Artifacts:"
          find . -maxdepth 4 -type f -name '*.3dsx' -print -ls || true

      - name: Upload .3dsx artifact
        uses: actions/upload-artifact@v4
        with:
          name: 3dsx-artifact
          path: |
            *.3dsx
            */*.3dsx
            */*/*.3dsx
